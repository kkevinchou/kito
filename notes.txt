CONTEXT

cleaning up camera perspective rendering code and ray casting.  looks like i don't need
to store the MV matrix in the camera each rendering frame FacePalm
shadowmapping only exists for basicshadow shaders. should make this more modular so that it can be imported into many shaders

TODO

Decide whether moving along a single vertex is allowed
max speed currently isn't used in physics component
networking :D
bake navmesh polygon normals into nav mesh polygons. in general make then more rich than just plain polygons

BUGS

Pathfinding where two polys share a vertex but have no portal.  Pathfinding will find a path but smoothing will fail (i think?).
Renderer is shared between asset manager and render system atm, may wkito to isolate it in one place.
changing camera view causes view to "shake"

NOTES

Should the forward method be a part of the view component? it seems tied to movement which isn't related to viewing

ANIMATIONS
 - Graze
 - Idle
 - Move
 - Loop


High Level Behavior Schema
- Sequence
- Selector
- "move_to": {thing} # translates this as {thing.position}
- "position": {thing}
- "pickup": {thing}
- "drop": {thing
- "random_item"


Camera system should be refactored into a "Following" or "Movement" system. There isn't any logic in there that is
actually camera specific. It just so happens that cameras are the first follower.

Camera as a component or entity?

MacOS only supports OpenGL4.1. Using a newer version of OpenGL causes `gl.Init` to return `glBindBuffersBase` as an error

NETWORKING
* Might want to add an indicator that an entity is replicated and shouldn't be simulated. Systems might
  unintentionally start manipulating replicated entities

Mixamo for free assets www.mixamo.com
check out using the collada loader from: https://github.com/g3n/engine/tree/master/loader/collada

automate navmesh generation based on geometry. geometry is tagged with a "layer" that the navmesh baking knows to use or discard. unity tooling https://www.youtube.com/watch?v=CHV1ymlw-P8. stepheight, max slope.
mark a player as a navmesh agent. this makes sense for destination based movement, less so for directional movement

figre out 3d platformer movement (physics based?)

camera rotations causing prediction misses even with no key inputs when sliding down a ramp. probably not properly
handling client side prediction when some external force not involving key presses causes our player to move